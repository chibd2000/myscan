# coding=utf-8
# @Author   : zpchcbd HG team
# @Time     : 2021-09-22 10:52
from core.data import gLogger
from core.request.asynchttp import *

async def check_unauth(addr):
    proxy = 'http://{}:{}'.format(addr.split(':')[0], str(addr.split(':')[1]))
    url = 'http://example.com/'
    async with aiohttp.ClientSession() as session:
        text = await AsyncFetcher.fetch(session=session, url=url, proxy=proxy)
        if 'Example Domain' in text:
            gLogger.myscan_info('Target maybe support proxy unauth, {}'.format(addr))
            return {'name': 'unauth', 'url': addr, 'software': 'proxy'}


async def proxy_scan(addr):
    vul_list = []
    a = await check_unauth(addr)
    if a is not None:
        vul_list.append(a)
    return vul_list


if __name__ == '__main__':
    import asyncio
    print(asyncio.get_event_loop().run_until_complete(proxy_scan('127.0.0.1:7890')))
