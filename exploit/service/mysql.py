# coding=utf-8
# @Author   : zpchcbd HG team
# @Time     : 2021-09-02 22:05
import os

from core.data import gLogger
from core.utils.informationprovider import InformationProvider
from async_timeout import timeout
import aiomysql
import asyncio

async def check_weak_pass(addr, up_list):
    with timeout(5):
        for username, password in up_list:
            try:
                conn = await aiomysql.connection.connect(host=addr.split(':')[0], user=username, password=password, db=None, port=int(addr.split(':')[1]))
                if conn:
                    gLogger.myscan_info('target maybe mysql weakpass, {}'.format(str(addr) + '|' + str(username) + '/' + str(password)))
                    return {'name': 'weakpass', 'url': str(addr) + '|' + str(username) + '/' + str(password), 'software': 'mysql'}
            except Exception:
                pass

async def mysql_scan(addr):
    vul_list = []
    mysql_username_list = InformationProvider.read_file('mysql_usernames.txt')
    mysql_password_list = InformationProvider.read_file('mysql_passwords.txt')
    mysql_up_list = InformationProvider.generate(mysql_username_list, mysql_password_list)
    a = await check_weak_pass(addr, mysql_up_list)
    if a is not None:
        vul_list.append(a)
    return vul_list
