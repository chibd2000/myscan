# coding=utf-8
# @Author   : zpchcbd HG team
# @Time     : 2021-09-02 15:29

from core.data import gLogger
from core.utils.informationprovider import InformationProvider
from async_timeout import timeout
import aioftp as aioftp


async def check_weak_pass(addr, up_list):
    # 有可能存在匿名登录的情况 username:anonymous
    anonymous_flag = False
    for username, password in up_list:
        try:
            with timeout(10):
                if not anonymous_flag:
                    if username == 'anonymous':
                        anonymous_flag = True
                else:
                    continue
                async with aioftp.Client.context(addr.split(':')[0], addr.split(':')[1], username, password) as client:
                    gLogger.myscan_info('target maybe ftp weakpass, {}'.format(str(addr) + ' | ' + str(username) + '/' + str(password)))
                    return {'name': 'weakpass', 'url': str(addr) + ' | ' + str(username) + '/' + str(password), 'software': 'ftp'}
        except Exception:
            pass


async def ftp_scan(addr):
    vul_list = []
    ftp_username_list = InformationProvider.read_file('ftp_usernames.txt')
    ftp_password_list = InformationProvider.read_file('ftp_passwords.txt')
    ftp_up_list = InformationProvider.generate(ftp_username_list, ftp_password_list)
    a = await check_weak_pass(addr, ftp_up_list)
    if a is not None:
        vul_list.append(a)
    return vul_list


if __name__ == '__main__':
    pass
