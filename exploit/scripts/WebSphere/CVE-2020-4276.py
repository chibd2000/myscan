# coding=utf-8
# @Author   : zpchcbd HG team
# @Time     : 2021-09-16 19:14

from core.data import gLogger
from exploit.scripts import BaseScript
from core.myenums import BugType, BugLevel
from core.request.asynchttp import *

# fofa: app="IBM-WebSphere" && port="8880"
# python3 batch.py -m exploit.scripts.WebSphere.CVE-2020-4276 -cs -fs "app=\"IBM-WebSphere\""


class Script(BaseScript):
    name = 'WebSphere'

    def __init__(self, target):
        super().__init__()
        # 漏洞目标
        self.target = target
        # 漏洞等级
        self.bug_level = BugLevel.HIGH
        # 类型
        self.bug_type = BugType.RCE
        # 编号
        self.bug_number = 'CVE-2020-4276'
        # 来源
        self.bug_refer = 'https://github.com/mekoko/CVE-2020-4276/blob/master/cve-2020-4276.py'
        # 特定路径判断
        self.detect_path_list = ['/']
        # exec
        self.exec_path_list = []
        # 相关信息
        self.info = '''WebSphere Application Server 9.0.x | 8.5.x | 8.0.x | 7.0.x'''

    async def detect(self):
        async with aiohttp.ClientSession() as session:
            for detect_path in self.detect_path_list:
                url = f'http://{self.target}{detect_path}' if self.target.startswith(('http:', 'https:')) is False else f'{self.target}{detect_path}'
                async with session.get(url=url, headers=self.headers, timeout=self.req_timeout, verify_ssl=False) as response:
                    if response is not None:
                        text = await response.text()
                        if 'websphere' in text or 'com.ibm.websphere.ihs.doc' in text or 'content="websphere application server' in text:
                            self.flag = True
                            gLogger.myscan_info('[{} {}] {}'.format(self.name, BugType.FINGER, url))
                            return {'name': '{} {}'.format(self.name, BugType.FINGER), 'url': url, 'software': self.name}


if __name__ == '__main__':
    pass