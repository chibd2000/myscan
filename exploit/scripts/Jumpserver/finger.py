# coding=utf-8
# @Author   : zpchcbd HG team
# @Time     : 2021-09-11 21:29

from core.data import gLogger
from exploit.scripts import BaseScript
from core.myenums import *
from core.request.asynchttp import *

# python3 batch.py -m exploit.scripts.Jumpserver.finger -cs -fs "app=\"JumpServer-堡垒机\""


class Script(BaseScript):
    name = 'JumpServer'

    def __init__(self, target):
        super().__init__()
        # 漏洞目标
        self.target = target
        # 漏洞等级
        self.bug_level = BugLevel.HIGH
        # 类型
        self.bug_type = BugType.RCE
        # 编号
        self.bug_number = ''
        # 来源
        self.bug_refer = 'https://github.com/gardenWhy/JumpServer_RCE'
        # 特定路径判断
        self.detect_path_list = ['/static/img/logo.png']
        # exec
        self.exec_path_list = []
        # 相关信息
        self.info = ''' verion: JumpServer < v2.6.2 JumpServer < v2.5.4 JumpServer < v2.4.5 JumpServer = v1.5.9'''
        self.favicon_md5_list = ['d5d914f5db9cf9b5283ab4d9e35c59ff']

    async def detect(self):
        async with aiohttp.ClientSession() as session:
            for detect_path in self.detect_path_list:
                url = f'http://{self.target}{detect_path}' if self.target.startswith(('http:', 'https:')) is False else f'{self.target}{detect_path}'
                favicon_md5 = await AsyncFetcher.get_favicon_md5_fetch(session=session, url=url, headers=self.headers, timeout=self.req_timeout)
                if favicon_md5 in self.favicon_md5_list:
                    self.flag = True
                    gLogger.myscan_info('[{} {}] {}'.format(self.name, BugType.FINGER, url))
                    return {'name': '{} {}'.format(self.name, BugType.FINGER), 'url': url, 'software': self.name}


if __name__ == '__main__':
    pass
